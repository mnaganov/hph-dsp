declare name "SRH1540 Crossfeed and Linearization Effect";
declare author "Mikhail Naganov";
declare version "1.0";

import("filter.lib");

cf_pre_attn = 0.5069907083;
d_bcoeffs = (1.3922589117, -0.1671886707, -0.3900848919, -0.2609142131, -0.3148044725, -0.2134394791, -0.1957839015, -0.0807061748, -0.0887963165, -0.0180883859, 0.0350882442, 0.0637338379, -0.0201605796, -0.0090717694, 0.0231320277, 0.0921629468, 0.0560207339, 0.0618578353, -0.0497107379, 0.0470489467, 0.0256121565, 0.1323512997, -0.0020002313, -0.0883802218, -0.0129688278);
d_acoeffs = (-0.1129403942, -0.2727873359, -0.1827000490, -0.2229877300, -0.1521366090, -0.1407647106, -0.0592798300, -0.0655907149, -0.0152774659, 0.0228200172, 0.0436231436, -0.0162197293, -0.0082752179, 0.0148246054, 0.0645635654, 0.0391380484, 0.0437206249, -0.0360483241, 0.0332509090, 0.0180501678, 0.0949150900, -0.0008989325, -0.0628379705, -0.0091819141);
o_bcoeffs = (0.9141694726, -0.1127635557, -0.0881471039, -0.0939509156, -0.0883839602, -0.0882451526, -0.0826659823, -0.0801528041, -0.0764742448, -0.0720208571, -0.0637180011, -0.0589303959, -0.0535325674, -0.0446329674, -0.0357088157, -0.0292512277, -0.0185360888, -0.0073673874, 0.0010375189, 0.0159059830, 0.0231105552, 0.0413518324, 0.0459948502, 0.0786203629, 0.0166152739);
o_acoeffs = (-0.1337734910, -0.1026681154, -0.1085870213, -0.1008947578, -0.0998820140, -0.0925990543, -0.0890478344, -0.0841071847, -0.0785473366, -0.0687504424, -0.0630119486, -0.0565990941, -0.0465052360, -0.0364403365, -0.0292228985, -0.0173716205, -0.0051774368, 0.0039183684, 0.0199906621, 0.0275570833, 0.0471440559, 0.0516994849, 0.0868659694, 0.0181916700);
opp_attn = 0.4206297637;

pre_attn = 0.5754399373;  // -4.8 dB
bcoeffs = (1.2935460135, -2.6882896883, 0.5805587189, 1.2009912395, 0.3177741055, -0.6171972024, -0.5218648194, 0.3340917147, 0.4054744762, -0.0405624307, -0.3558044851, -0.2043156860, 0.1685493924, 0.3015821067, 0.0558515813, -0.1788830569, -0.2144322685, 0.0633773691, 0.1560247988, 0.0357732992, -0.2182314505, -0.1293020231, 0.1598215774, 0.3392009523, 0.0669380381, -0.2685875972, -0.3164959869, 0.1179400379, 0.2915881431, 0.1009537396, -0.2997266253, -0.2080650240, 0.3020348203, 0.2177289908, -0.1476205804, -0.3482413495, 0.0295089412, 0.5948549229, -0.4211881016, -0.1423439997, 0.2024530153, 0.0981220491, -0.1291050607, 0.0216112163, -0.0249032360, 0.0082398647, 0.0128967430, 0.0035685833, -0.0058439433);
acoeffs = (-2.0453036147, 0.5230826068, 0.5959917005, 0.3782578067, -0.2473492988, -0.3709455169, 0.0311360871, 0.2669173188, 0.0594742354, -0.2207636452, -0.1597915526, 0.0799060582, 0.2223185951, 0.0526918140, -0.1152527826, -0.1582023376, 0.0283272530, 0.1000895451, 0.0376221536, -0.1430450222, -0.0904695454, 0.0958963276, 0.2442307901, 0.0686384197, -0.1710774133, -0.2460426797, 0.0514010297, 0.1949261624, 0.1074360542, -0.1904506404, -0.1606327151, 0.1858603684, 0.1540728526, -0.0672053663, -0.2506302585, -0.0141427715, 0.4233486162, -0.2869941425, -0.0492770840, 0.0795889921, 0.0541359186, -0.0511867369, 0.0399278043, -0.0624988749, 0.0082243893, 0.0219009896, 0.0032594689, -0.0073483114);

channel_process(x, y) = (x : iir(d_bcoeffs, d_acoeffs)) + ((y : iir(o_bcoeffs, o_acoeffs)) * opp_attn);
crossfeed(x, y) = channel_process(x, y), channel_process(y, x);
process = *(cf_pre_attn), *(cf_pre_attn) : crossfeed : *(pre_attn), *(pre_attn) : iir(bcoeffs, acoeffs), iir(bcoeffs, acoeffs);
